name: dash-project

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  install-deps:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache python modules
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-deps-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-deps-${{ matrix.python-version }}-
          ${{ runner.os }}-deps-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

  flake8-py3:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Run flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          flake8 --version
          flake8 ./

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Run unittests
        run: |
          python -m unittest discover test/

  docker-ready:
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - uses: actions/checkout@v2
      - name: Build & run docker
        env:
          API_URL: ${{ secrets.API_URL }}
          API_LOGIN: ${{ secrets.API_LOGIN }}
          API_PWD: ${{ secrets.API_PWD }}
        run: docker-compose up -d --build
      - name: Ping app inside the container
        run: nc -vz localhost 8050

  docker-gunicorn:
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-deps-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-deps-${{ matrix.python-version }}-
            ${{ runner.os }}-deps-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run gunicorn
        env:
          API_URL: ${{ secrets.API_URL }}
          API_LOGIN: ${{ secrets.API_LOGIN }}
          API_PWD: ${{ secrets.API_PWD }}
        run: |
          screen -dmS temp-screen
          screen -S temp-screen -p 0 -X stuff "export API_URL=$API_URL^M"
          screen -S temp-screen -p 0 -X stuff "export API_LOGIN=$API_LOGIN^M"
          screen -S temp-screen -p 0 -X stuff "export API_PWD=$API_PWD^M"
          screen -S temp-screen -p 0 -X stuff "gunicorn --workers 1 -b 0.0.0.0:8050 --chdir ./app main:server^M"
          sleep 5
      - name: Ping the gunicorn process port
        run: nc -vz localhost 8050
