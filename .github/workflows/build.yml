name: build

on:
  push:
    branches: main
  pull_request:
    branches: main

env:
  PYTHON_VERSION: "3.11"
  UV_VERSION: "0.5.13"
  POETRY_VERSION: "1.8.3"

jobs:
  dash:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: abatilo/actions-poetry@v4
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - uses: astral-sh/setup-uv@v5
        with:
          version: ${{ env.UV_VERSION }}
      - name: Install dependencies
        run: |
          poetry export -f requirements.txt --without-hashes --output requirements.txt
          uv pip install --system -r requirements.txt
      - name: Run demo
        env:
          API_URL: ${{ secrets.API_URL }}
          API_LOGIN: ${{ secrets.API_LOGIN }}
          API_PWD: ${{ secrets.API_PWD }}
        run: |
          screen -dm python app/index.py
          sleep 20
          curl --fail http://localhost:8050/

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: abatilo/actions-poetry@v4
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Resolve dependencies
        run: poetry export -f requirements.txt --without-hashes --output requirements.txt
      - name: Build, run & check docker
        env:
          API_URL: ${{ secrets.API_URL }}
          API_LOGIN: ${{ secrets.API_LOGIN }}
          API_PWD: ${{ secrets.API_PWD }}
        run: |
          docker compose up -d --build --wait
          echo "Waiting for app..."
          sleep 10
          docker compose logs
          curl --retry 5 --retry-delay 3 --fail http://localhost:8050/
      
