name: style

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  flake8:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Run flake8
        run: |
          pip install flake8
          flake8 --version
          flake8 ./

  isort:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Run isort
        run: |
          pip install isort
          isort --version
          isort app/
          if [ -n "$(git status --porcelain --untracked-files=no)" ]; then exit 1; else echo "All clear"; fi

  mypy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.3.0"
      - name: Resolve dependencies
        run: poetry export -f requirements.txt --without-hashes --output requirements.txt
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ matrix.python }}-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --upgrade
          pip install "mypy==1.2.0"
      - name: Run mypy
        run: |
          mypy --version
          mypy

  black:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Run black
        run: |
          pip install "black==22.3.0"
          black --version
          black --check --diff .

  #bandit: 
  #  runs-on: ${{ matrix.os }}
  #  strategy:
  #    matrix:
  #      os: [ubuntu-latest]
  #      python: [3.8]
  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Set up Python
  #      uses: actions/setup-python@v4
  #      with:
  #        python-version: ${{ matrix.python }}
  #        architecture: x64
  #    - name: Run bandit
  #      run: |
  #        pip install bandit[toml]
  #        bandit --version
  #        bandit -r . -c pyproject.toml
