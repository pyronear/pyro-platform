[build-system]
requires = ["poetry>=1.0"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "pyro-platform"
version = "0.1.2.dev0"
description = "Monitoring platform for wildfire alerts"
authors = ["Pyronear <contact@pyronear.org>"]
license = "Apache-2.0"


[tool.poetry.dependencies]
python = "^3.8"
dash = ">=1.16.2,<2.0.0"
dash-bootstrap-components = ">=0.10.6"
dash-leaflet = "^0.1.4"
dash-extensions = ">=0.0.51"
Flask-Caching = ">=1.3.3"
pandas = ">=0.24.2,<2.0.0"
pyroclient = { git = "https://github.com/pyronear/pyro-api.git#main", subdirectory = "client" }
python-dotenv = ">=0.15.0,<1.0.0"
geopy = "^2.1.0"
requests = "^2.31.0"
sentry-sdk = { version = "^1.5.12", extras = ["flask"] }
gunicorn = ">=20.0.4"
# Indirect deps
# cf. https://github.com/plotly/dash/issues/1992
werkzeug = ">=0.16.0,<2.1.0"
# cf. https://stackoverflow.com/questions/72191560/importerror-cannot-import-name-soft-unicode-from-markupsafe
MarkupSafe = "<2.1.0"
# cf. https://stackoverflow.com/questions/72441758/typeerror-descriptors-cannot-not-be-created-directly
protobuf = ">=3.14.0,<4.0.0"

[tool.poetry.group.quality]
optional = true

[tool.poetry.group.quality.dependencies]
ruff = { version = "==0.1.2" }
mypy = {version = "==1.6.1", optional = true}
types-requests = { version = ">=2.0.0" }
pandas-stubs = { version = ">=1.5.2" }
black = {version = "==23.3.0", optional = true}
bandit = { version = "^1.7.0", extras = ["toml"], optional = true }
pre-commit = { version = "^2.17.0", optional = true }

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    # "D101", "D103",  # pydocstyle missing docstring in public function/class
    "D201","D202","D207","D208","D214","D215","D300","D301","D417", "D419",  # pydocstyle
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "CPY001",  # flake8-copyright
    "ISC",  # flake8-implicit-str-concat
    "PYI",  # flake8-pyi
    "NPY",  # numpy
    "PERF",  # perflint
    "RUF",  # ruff specific
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise from
    "C901",  # too complex
    "F403",  # star imports
    "E731",  # lambda assignment
    "C416",  # list comprehension to list()
]
exclude = [".git"]
line-length = 120
target-version = "py39"
preview = true

[tool.ruff.per-file-ignores]
"**/__init__.py" = ["I001", "F401", "CPY001"]
".github/**.py" = ["D"]

[tool.ruff.isort]
known-first-party = ["config", "pages", "components", "utils", "services"]

[tool.mypy]
python_version = "3.8"
mypy_path = "app/"
files = "app/"
show_error_codes = true
pretty = true
warn_unused_ignores = true
warn_redundant_casts = true
no_implicit_optional = true
check_untyped_defs = true
implicit_reexport = false
explicit_package_bases = true

[[tool.mypy.overrides]]
module = [
    "dash.*",
    "dash_table.*",
    "dash_leaflet.*",
    "dash_bootstrap_components.*",
    "dash_html_components.*",
    "dash_core_components.*",
    "geopy.*",
    "pyroclient.*",
    "flask_caching.*",
]
ignore_missing_imports = true

[tool.black]
line-length = 120
target-version = ['py39']

[tool.bandit]
exclude_dirs = []
skips = ["B101"]
